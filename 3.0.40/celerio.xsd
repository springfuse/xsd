<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.jaxio.com/schema/celerio" elementFormDefault="qualified" targetNamespace="http://www.jaxio.com/schema/celerio">
  <xs:import schemaLocation="nonamespace.xsd"/>
  <xs:simpleType name="methodConvention">
    <xs:restriction base="xs:string">
      <xs:enumeration value="GET"/>
      <xs:enumeration value="SET"/>
      <xs:enumeration value="ADD"/>
      <xs:enumeration value="EDIT"/>
      <xs:enumeration value="CONTAINS"/>
      <xs:enumeration value="GET_BY"/>
      <xs:enumeration value="DELETE_BY"/>
      <xs:enumeration value="REMOVE"/>
      <xs:enumeration value="REMOVE_ALL"/>
      <xs:enumeration value="HAS"/>
      <xs:enumeration value="GET_LOCALIZED"/>
      <xs:enumeration value="RANDOM_GETTER"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="enumType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ORDINAL"/>
      <xs:enumeration value="STRING"/>
      <xs:enumeration value="CUSTOM"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="module">
    <xs:restriction base="xs:string">
      <xs:enumeration value="SPRING3"/>
      <xs:enumeration value="PACK_MVC_3"/>
      <xs:enumeration value="JAVAX_VALIDATION"/>
      <xs:enumeration value="PRODUCE_HAS_METHODS"/>
      <xs:enumeration value="ENABLE_FK_COLUMN_SETTER"/>
      <xs:enumeration value="PRODUCE_TO_DISPLAY_STRING_METHOD"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="classType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="model"/>
      <xs:enumeration value="primaryKey"/>
      <xs:enumeration value="dao"/>
      <xs:enumeration value="formatter"/>
      <xs:enumeration value="hibernate"/>
      <xs:enumeration value="manager"/>
      <xs:enumeration value="modelGenerator"/>
      <xs:enumeration value="managerImpl"/>
      <xs:enumeration value="searchForm"/>
      <xs:enumeration value="controller"/>
      <xs:enumeration value="controllerWithPathVariable"/>
      <xs:enumeration value="restController"/>
      <xs:enumeration value="searchController"/>
      <xs:enumeration value="formService"/>
      <xs:enumeration value="formValidator"/>
      <xs:enumeration value="webSupport"/>
      <xs:enumeration value="webModel"/>
      <xs:enumeration value="validator"/>
      <xs:enumeration value="webModelConverter"/>
      <xs:enumeration value="webConverter"/>
      <xs:enumeration value="webModelItems"/>
      <xs:enumeration value="memory"/>
      <xs:enumeration value="enumModel"/>
      <xs:enumeration value="enumItems"/>
      <xs:enumeration value="wicket"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="cascadeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ALL"/>
      <xs:enumeration value="PERSIST"/>
      <xs:enumeration value="MERGE"/>
      <xs:enumeration value="REMOVE"/>
      <xs:enumeration value="REFRESH"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="generationType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="TABLE"/>
      <xs:enumeration value="SEQUENCE"/>
      <xs:enumeration value="IDENTITY"/>
      <xs:enumeration value="AUTO"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="tableType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="TABLE"/>
      <xs:enumeration value="VIEW"/>
      <xs:enumeration value="ALIAS"/>
      <xs:enumeration value="SYNONYM"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="wellKnownFolder">
    <xs:restriction base="xs:string">
      <xs:enumeration value="JAVA"/>
      <xs:enumeration value="JAVA_TEST"/>
      <xs:enumeration value="SQL"/>
      <xs:enumeration value="CONFIG"/>
      <xs:enumeration value="WEBAPP"/>
      <xs:enumeration value="WEBINF"/>
      <xs:enumeration value="VIEWS"/>
      <xs:enumeration value="FLOWS"/>
      <xs:enumeration value="RESOURCES"/>
      <xs:enumeration value="RESOURCES_TEST"/>
      <xs:enumeration value="COLLISION"/>
      <xs:enumeration value="CELERIO_LOCAL_TEMPLATE"/>
      <xs:enumeration value="SITE"/>
      <xs:enumeration value="SPRING"/>
      <xs:enumeration value="SPRING_TEST"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="trueFalse">
    <xs:restriction base="xs:string">
      <xs:enumeration value="TRUE"/>
      <xs:enumeration value="FALSE"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="inheritanceType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="SINGLE_TABLE"/>
      <xs:enumeration value="TABLE_PER_CLASS"/>
      <xs:enumeration value="JOINED"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="jdbcType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ARRAY"/>
      <xs:enumeration value="BIGINT"/>
      <xs:enumeration value="BINARY"/>
      <xs:enumeration value="BIT"/>
      <xs:enumeration value="BLOB"/>
      <xs:enumeration value="BOOLEAN"/>
      <xs:enumeration value="CHAR"/>
      <xs:enumeration value="CLOB"/>
      <xs:enumeration value="DATALINK"/>
      <xs:enumeration value="DATE"/>
      <xs:enumeration value="DECIMAL"/>
      <xs:enumeration value="DISTINCT"/>
      <xs:enumeration value="DOUBLE"/>
      <xs:enumeration value="FLOAT"/>
      <xs:enumeration value="INTEGER"/>
      <xs:enumeration value="JAVA_OBJECT"/>
      <xs:enumeration value="LONGVARBINARY"/>
      <xs:enumeration value="LONGVARCHAR"/>
      <xs:enumeration value="NUMERIC"/>
      <xs:enumeration value="OTHER"/>
      <xs:enumeration value="REAL"/>
      <xs:enumeration value="REF"/>
      <xs:enumeration value="SMALLINT"/>
      <xs:enumeration value="STRUCT"/>
      <xs:enumeration value="TIME"/>
      <xs:enumeration value="TIMESTAMP"/>
      <xs:enumeration value="TINYINT"/>
      <xs:enumeration value="VARBINARY"/>
      <xs:enumeration value="VARCHAR"/>
      <xs:enumeration value="ROW_ID"/>
      <xs:enumeration value="LONGNVARCHAR"/>
      <xs:enumeration value="NCHAR"/>
      <xs:enumeration value="NCLOB"/>
      <xs:enumeration value="NVARCHAR"/>
      <xs:enumeration value="SQLXML"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="generatedPackage">
    <xs:restriction base="xs:string">
      <xs:enumeration value="AccountService"/>
      <xs:enumeration value="Model"/>
      <xs:enumeration value="Context"/>
      <xs:enumeration value="Dao"/>
      <xs:enumeration value="DaoSupport"/>
      <xs:enumeration value="Constraint"/>
      <xs:enumeration value="ConstraintImpl"/>
      <xs:enumeration value="EmailService"/>
      <xs:enumeration value="Hibernate"/>
      <xs:enumeration value="HibernateListener"/>
      <xs:enumeration value="HibernateSupport"/>
      <xs:enumeration value="Jms"/>
      <xs:enumeration value="Jmx"/>
      <xs:enumeration value="Jwebunit"/>
      <xs:enumeration value="Manager"/>
      <xs:enumeration value="ManagerImpl"/>
      <xs:enumeration value="ManagerSupport"/>
      <xs:enumeration value="Memory"/>
      <xs:enumeration value="PasswordService"/>
      <xs:enumeration value="Random"/>
      <xs:enumeration value="ReminderService"/>
      <xs:enumeration value="Root"/>
      <xs:enumeration value="Scheduling"/>
      <xs:enumeration value="Security"/>
      <xs:enumeration value="Service"/>
      <xs:enumeration value="SignupService"/>
      <xs:enumeration value="Transaction"/>
      <xs:enumeration value="Util"/>
      <xs:enumeration value="Web"/>
      <xs:enumeration value="WebAction"/>
      <xs:enumeration value="WebContext"/>
      <xs:enumeration value="WebController"/>
      <xs:enumeration value="RestController"/>
      <xs:enumeration value="WebModel"/>
      <xs:enumeration value="WebModelValidator"/>
      <xs:enumeration value="WebModelSupport"/>
      <xs:enumeration value="WebModelConverter"/>
      <xs:enumeration value="Format"/>
      <xs:enumeration value="WebFormat"/>
      <xs:enumeration value="WebConverter"/>
      <xs:enumeration value="WebModelItems"/>
      <xs:enumeration value="WebModelSearchForm"/>
      <xs:enumeration value="WebFaces"/>
      <xs:enumeration value="WebFlow"/>
      <xs:enumeration value="WebFilter"/>
      <xs:enumeration value="WebInterceptor"/>
      <xs:enumeration value="WebListener"/>
      <xs:enumeration value="WebServlet"/>
      <xs:enumeration value="WebUtil"/>
      <xs:enumeration value="WebValidator"/>
      <xs:enumeration value="WebUi"/>
      <xs:enumeration value="WebEl"/>
      <xs:enumeration value="GwtClient"/>
      <xs:enumeration value="GwtShared"/>
      <xs:enumeration value="GwtServer"/>
      <xs:enumeration value="Wicket"/>
      <xs:enumeration value="WicketComponent"/>
      <xs:enumeration value="WicketComponentForm"/>
      <xs:enumeration value="WicketListener"/>
      <xs:enumeration value="WicketPage"/>
      <xs:enumeration value="WicketPanel"/>
      <xs:enumeration value="WicketSkin"/>
      <xs:enumeration value="WicketUtil"/>
      <xs:enumeration value="EnumModel"/>
      <xs:enumeration value="EnumItems"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="associationDirection">
    <xs:restriction base="xs:string">
      <xs:enumeration value="UNIDIRECTIONAL"/>
      <xs:enumeration value="BIDIRECTIONAL"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fetchType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="LAZY"/>
      <xs:enumeration value="EAGER"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="mappedType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="M_ARRAY"/>
      <xs:enumeration value="M_BIGDECIMAL"/>
      <xs:enumeration value="M_BIGINTEGER"/>
      <xs:enumeration value="M_BOOLEAN"/>
      <xs:enumeration value="M_BYTES"/>
      <xs:enumeration value="M_CLOB"/>
      <xs:enumeration value="M_DOUBLE"/>
      <xs:enumeration value="M_FLOAT"/>
      <xs:enumeration value="M_BLOB"/>
      <xs:enumeration value="M_INTEGER"/>
      <xs:enumeration value="M_LONG"/>
      <xs:enumeration value="M_REF"/>
      <xs:enumeration value="M_STRING"/>
      <xs:enumeration value="M_CHAR"/>
      <xs:enumeration value="M_BYTE"/>
      <xs:enumeration value="M_JODA_LOCALDATE"/>
      <xs:enumeration value="M_JODA_LOCALDATETIME"/>
      <xs:enumeration value="M_SQLDATE"/>
      <xs:enumeration value="M_UTILDATE"/>
      <xs:enumeration value="M_TIME"/>
      <xs:enumeration value="M_TIMESTAMP"/>
      <xs:enumeration value="M_URL"/>
      <xs:enumeration value="M_OBJECT"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="collectionType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ArrayList"/>
      <xs:enumeration value="HashSet"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="extendsClass">
    <xs:sequence/>
    <xs:attribute type="xs:string" use="required" name="fullType">
      <xs:annotation>
        <xs:documentation>The full class name that this entity extends. For example 'com.mycompany.MyClass'.  This is taken into account only if the entity is a root entity.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="conventions">
    <xs:annotation>
      <xs:documentation>Change the default celerio conventions to your own needs.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element type="tns:fieldNaming" name="fieldNaming" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Allows you to change the way Celerio calculates the default field name out of a column name.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element type="eclipseFormatter" name="eclipseFormatter" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Defines the formatting option of the generated Java files.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element type="tns:xmlFormatter" name="xmlFormatter" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Defines the formatting options of the generated XML/XHTML files.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="classTypes" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Override the conventions for classes</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="tns:classTypeOverride" name="classType" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="generatedPackages" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Override the conventions for packages</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="tns:generatedPackageOverride" name="generatedPackage" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="methodConventions" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Override the conventions for methods</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="tns:methodConventionOverride" name="methodConvention" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="wellKnownFolders" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Override the conventions for folders</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="tns:wellKnownFolderOverride" name="wellKnownFolder" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute type="tns:collectionType" name="collectionType">
      <xs:annotation>
        <xs:documentation>You can override the default collection type for this entity</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="identifiableProperty">
      <xs:annotation>
        <xs:documentation>The property name used in the Identifiable interface.  Defaults to 'primaryKey'.  If all your primary key are mapped to the same property name, you should   change the identifiable property here to limit redundancy.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="tns:trueFalse" name="entitySubPackagePreprended">
      <xs:annotation>
        <xs:documentation>When constructing the package name of a class constructed using a GeneratedPackage, tell if the GeneratedPackage subPackage should be appended. For  example given the entity 'MyEntity' with subpackage 'mysubpackage', and the generated package ManagerImpl with subpackage 'impl' then the packageName of  all classes for MyEntity constructed using ManagerImpl will have the subpackage 'impl.mysubpackage'</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="databaseInfo">
    <xs:annotation>
      <xs:documentation>Information about the database where celerio extracted the metadata</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
    <xs:attribute type="xs:int" use="required" name="databaseMajorVersion"/>
    <xs:attribute type="xs:int" use="required" name="databaseMinorVersion"/>
    <xs:attribute type="xs:string" name="databaseProductName"/>
    <xs:attribute type="xs:string" name="databaseProductVersion"/>
    <xs:attribute type="xs:int" use="required" name="driverMajorVersion"/>
    <xs:attribute type="xs:int" use="required" name="driverMinorVersion"/>
    <xs:attribute type="xs:string" name="driverName"/>
    <xs:attribute type="xs:string" name="driverVersion"/>
    <xs:attribute type="xs:string" name="extraInfo"/>
  </xs:complexType>
  <xs:complexType name="oneToOneConfig">
    <xs:sequence>
      <xs:element name="cascades" minOccurs="0">
        <xs:annotation>
          <xs:documentation>The list of JPA cascade types for the this one-to-one association.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="tns:cascade" name="cascade" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute type="xs:string" name="var">
      <xs:annotation>
        <xs:documentation>The variable name for this one-to-one association. It should be singular, for example: 'parent'.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="tns:fetchType" name="fetch">
      <xs:annotation>
        <xs:documentation>The JPA fetch type for this one-to-one association.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="fieldNaming">
    <xs:annotation>
      <xs:documentation><![CDATA[By default Celerio calculates Java field name based on the underlying column name.  <br>  This setting allows you to change the column name that is passed to Celerio   to calculate the default field name.  <br>  You can for example remove well known prefix pattern from your column names.]]></xs:documentation>
    </xs:annotation>
    <xs:sequence/>
    <xs:attribute type="xs:string" name="regexp">
      <xs:annotation>
        <xs:documentation>The regular expression to apply on the column name.  For example, assuming you want to remove from all column names the prefix string that consists of 3 chars and a '_', you can   use 'regexp="^.{3}_{1}" replace=""'</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="replace">
      <xs:annotation>
        <xs:documentation>The replacement String.  For example, assuming you want to remove from all column names the prefix string that consists of 3 chars and a '_', you can   use 'regexp="^.{3}_{1}" replace=""'.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="enumConfig">
    <xs:annotation>
      <xs:documentation>Describes an enum class</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="enumValues">
        <xs:annotation>
          <xs:documentation>Specify the values that will be added to the current enum</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="tns:enumValue" name="enumValue" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="comments" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Set comments for this enumeration.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="xs:string" name="comment" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute type="xs:string" use="required" name="name">
      <xs:annotation>
        <xs:documentation><![CDATA[Set the name of the generated enum.<br>  Example: name="CreditCardEnum"]]></xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="rootPackage">
      <xs:annotation>
        <xs:documentation><![CDATA[Allows you to override the default root package.<br>  Example: com.yourcompany]]></xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="subPackage">
      <xs:annotation>
        <xs:documentation><![CDATA[When you define a sub-package, the resulting enum's package becomes "<rootPackage>.domain.<subPackage>" instead of "<rootPackage>.domain". There is no  sub-package by default.]]></xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="tns:enumType" name="type">
      <xs:annotation>
        <xs:documentation>JPA enum type</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="userType">
      <xs:annotation>
        <xs:documentation><![CDATA[Specifiy the user type implementation to use to be given to hibernate <br/>  Example: name="com.youcompany.hibernate.support.CustomDateUserType"]]></xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="classTypeOverride">
    <xs:annotation>
      <xs:documentation>Override the class conventions such as GeneratedPackage, suffix and prefixes</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
    <xs:attribute type="tns:classType" use="required" name="classType">
      <xs:annotation>
        <xs:documentation>The ClassType to override</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="prefix">
      <xs:annotation>
        <xs:documentation>Override the prefix for this ClassType</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="suffix">
      <xs:annotation>
        <xs:documentation>Override the suffix for this ClassType</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="tns:generatedPackage" name="generatedPackage">
      <xs:annotation>
        <xs:documentation>Override the GeneratedPackage for this ClassType</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="genericGenerator">
    <xs:sequence>
      <xs:element name="parameters" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element type="tns:metaAttribute" name="parameter" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute type="xs:string" name="name"/>
    <xs:attribute type="xs:string" name="strategy"/>
  </xs:complexType>
  <xs:complexType name="headerComment">
    <xs:annotation>
      <xs:documentation>Specify your own file header comments</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="lines" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Set each line to be added to the header files.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="xs:string" name="line" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute type="xs:boolean" name="include">
      <xs:annotation>
        <xs:documentation>Should the header be present in the generated files ?</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="manyToOneConfig">
    <xs:sequence>
      <xs:element name="cascades" minOccurs="0">
        <xs:annotation>
          <xs:documentation>The list of JPA cascade types for the this ManyToOne association.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="tns:cascade" name="cascade" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute type="xs:string" name="var">
      <xs:annotation>
        <xs:documentation>The variable name for this many-to-one relation. It should be singular, for example: 'parent'.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="tns:fetchType" name="fetch">
      <xs:annotation>
        <xs:documentation>The JPA fetch type for this ManyToOne association.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="jdbcConnectivity">
    <xs:sequence>
      <xs:element name="tableTypes" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Table types to retrieve</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="tns:tableType" name="tableType" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute type="xs:string" name="driver">
      <xs:annotation>
        <xs:documentation><![CDATA[Jdbc driver name<br>  Example: org.h2.Driver]]></xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="url">
      <xs:annotation>
        <xs:documentation><![CDATA[Jdbc url connection<br>  Example: Jdbc:h2:~/mydatabase]]></xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="user">
      <xs:annotation>
        <xs:documentation><![CDATA[Jdbc user<br>  Example: myuser]]></xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="password">
      <xs:annotation>
        <xs:documentation><![CDATA[Jdbc password<br>  Example: mypassword]]></xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="schemaName"/>
    <xs:attribute type="xs:string" name="tableNamePattern">
      <xs:annotation>
        <xs:documentation><![CDATA[you can restrict table extraction using a pattern<br>  Example: PROJECT_%]]></xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:boolean" use="required" name="oracleRetrieveRemarks">
      <xs:annotation>
        <xs:documentation>Should Celerio retrieve remarks on oracle, beware this is a very time consuming operation</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:boolean" use="required" name="oracleRetrieveSynonyms">
      <xs:annotation>
        <xs:documentation>Should Celerio retrieve synonyms on oracle</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="catalog">
      <xs:annotation>
        <xs:documentation><![CDATA[Catalog name; must match the catalog name as it is stored in the database.<br>  "" retrieves those without a catalog<br>  empty means that the catalog name should not be used to narrow the search]]></xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="methodConventionOverride">
    <xs:annotation>
      <xs:documentation>change the prefix/suffix conventions for a given method</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
    <xs:attribute type="tns:methodConvention" use="required" name="methodConvention">
      <xs:annotation>
        <xs:documentation><![CDATA[Method type to override<br>  Example: GET_LOCALIZED]]></xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="prefix">
      <xs:annotation>
        <xs:documentation><![CDATA[Override the prefix for this methodConvention<br>  Example: get]]></xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="suffix">
      <xs:annotation>
        <xs:documentation><![CDATA[Override the suffix for this methodConvention<br>  Example: Localized]]></xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="xmlFormatter">
    <xs:sequence/>
    <xs:attribute type="xs:boolean" use="required" name="enableXmlFormatter"/>
    <xs:attribute type="xs:int" name="maximumLineWidth"/>
    <xs:attribute type="xs:int" name="indent"/>
  </xs:complexType>
  <xs:complexType name="celerio">
    <xs:sequence>
      <xs:element name="includes" minOccurs="0">
        <xs:annotation>
          <xs:documentation>For large projects, you can split the content of the entityConfigs tag into multiple files and 'include' the files here.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="tns:include" name="include" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element type="tns:configuration" name="configuration" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Configure the celerio generator, such as conventions, jdbc connectivity, and other</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="constraintConfigs" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Specify constraint configuration (Future use)</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="tns:constraintConfig" name="constraintConfig" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="entityConfigs" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Configure the generated entities.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="tns:entityConfig" name="entityConfig" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sharedEnumConfigs" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Configure enums that will be used in multiple entities, and referenced by their name in ColumnConfig</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="tns:enumConfig" name="sharedEnumConfig" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="pack">
    <xs:annotation>
      <xs:documentation>A pack is the aggregation of templates and static files that produces functionalities.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="filenames" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Control the generation output by filtering the generated files based on their filename.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="tns:pattern" name="filename" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="templates" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Control the generation output by filtering the execution of the generation templates based on their filename.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="tns:pattern" name="template" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute type="xs:string" use="required" name="name">
      <xs:annotation>
        <xs:documentation>Name of the pack</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="path">
      <xs:annotation>
        <xs:documentation><![CDATA[Path of the pack, it should be relative to the project, or absolute.<br>  Example: src/main/packs/my-own-pack/]]></xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:boolean" use="required" name="enable">
      <xs:annotation>
        <xs:documentation>Should this pack be used ?</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:int" name="order">
      <xs:annotation>
        <xs:documentation>Specify the pack order, its main interest is when two packs produce the same artifacts.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="importedKey">
    <xs:annotation>
      <xs:documentation>Description of the primary key columns that are referenced by a table's foreign key columns (the primary keys imported by a table).</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
    <xs:attribute type="xs:string" use="required" name="fkColumnName">
      <xs:annotation>
        <xs:documentation>Foreign key column name</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" use="required" name="fkName">
      <xs:annotation>
        <xs:documentation>Foreign key name</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" use="required" name="pkColumnName">
      <xs:annotation>
        <xs:documentation>Primary key column name being imported</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" use="required" name="pkTableName">
      <xs:annotation>
        <xs:documentation>Primary key table name being imported</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="generation">
    <xs:sequence/>
    <xs:attribute type="xs:string" name="modelBasePrefix"/>
    <xs:attribute type="xs:boolean" use="required" name="useMavenCelerioPlugin"/>
    <xs:attribute type="xs:string" name="version"/>
    <xs:attribute type="xs:boolean" use="required" name="generateCacheAnnotationInEntity">
      <xs:annotation>
        <xs:documentation>Tell whether or not the Hibernate @Cache should be generated in Entity. Defaults to true.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:boolean" use="required" name="caseSensitiveTableAndColumnAnnotations">
      <xs:annotation>
        <xs:documentation>Tell whether table/column comparison with entity/property's name is case sensitive. If no, then @Table / @Column annotation may be omitted in certain  cases. For example @Table("COUNTRY") would not be generated for @Entity public class Country... as they match. Defaults to false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="dateMapping">
    <xs:annotation>
      <xs:documentation>Global rule to map columns whose JDBC TYPE is DATE, TIME or TIMESTAMP to a Java type.</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
    <xs:attribute type="tns:mappedType" name="mappedType">
      <xs:annotation>
        <xs:documentation>The mapped type to use when both the jdbcType and the columnNamePattern matches what is expected.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="tns:jdbcType" name="columnJdbcType">
      <xs:annotation>
        <xs:documentation>Only column with this JdbcType are concerned by this mapping. Accepted JdbcType are DATE, TIME, TIMESTAMP. When set to null, we assume the column  JdbcType may be DATE, TIME, or TIMESTAMP.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="columnNameRegExp">
      <xs:annotation>
        <xs:documentation>An optional regular expression to restrict the mapping by column name. The matching is case insensitive.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="restriction">
    <xs:sequence>
      <xs:element name="classTypes" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Restrict the generation to the following classTypes</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="tns:classType" name="classType" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="wellKnownFolders" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Restrict the generation to the following wellKnownFolders</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="tns:wellKnownFolder" name="wellKnownFolder" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="generatedPackages" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Restrict the generation to the following generatedPackages</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="tns:generatedPackage" name="generatedPackage" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="customAnnotation">
    <xs:sequence/>
    <xs:attribute type="xs:string" name="annotation">
      <xs:annotation>
        <xs:documentation>The full qualified custom annotation to apply to this property. For example: @com.mycompany.MyAnnotation(debug = true)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="cascade">
    <xs:sequence/>
    <xs:attribute type="tns:cascadeType" name="type">
      <xs:annotation>
        <xs:documentation>JPA cascade type.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="index">
    <xs:annotation>
      <xs:documentation>Description of the given table's indices and statistics</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
    <xs:attribute type="xs:string" use="required" name="columnName">
      <xs:annotation>
        <xs:documentation>Column name</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" use="required" name="indexName">
      <xs:annotation>
        <xs:documentation>Index name</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:boolean" use="required" name="nonUnique">
      <xs:annotation>
        <xs:documentation>Can index values be non-unique</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="constraintConfig">
    <xs:annotation>
      <xs:documentation>Defines a constraint configuration. For future usage.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="metaAttributes" minOccurs="0">
        <xs:annotation>
          <xs:documentation>For future use</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="tns:metaAttribute" name="metaAttribute" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute type="xs:string" use="required" name="name">
      <xs:annotation>
        <xs:documentation>Name of the constraint</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="logicalname"/>
  </xs:complexType>
  <xs:complexType name="table">
    <xs:annotation>
      <xs:documentation>Describes all the metadata for a given table</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="columns">
        <xs:annotation>
          <xs:documentation>Describes all the columns metadata for this table</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="tns:column" name="column" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="indexes" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Describes all the indexes for this table</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="tns:index" name="indexe" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="importedKeys" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Describes all the imported keys for this table</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="tns:importedKey" name="importedKey" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="primaryKeys" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Describes all the primary keys for this table</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="xs:string" name="primaryKey" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute type="xs:string" use="required" name="name">
      <xs:annotation>
        <xs:documentation><![CDATA[This table name<br>  Example: USER]]></xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="tns:tableType" use="required" name="type">
      <xs:annotation>
        <xs:documentation>Type of the table</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="remarks">
      <xs:annotation>
        <xs:documentation><![CDATA[Documentation for this table<br>  Example: Table containing all the user related information]]></xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="inheritance">
    <xs:sequence/>
    <xs:attribute type="xs:string" name="discriminatorColumn"/>
    <xs:attribute type="xs:string" name="discriminatorValue"/>
    <xs:attribute type="xs:string" name="parentEntityName"/>
    <xs:attribute type="tns:inheritanceType" name="strategy"/>
  </xs:complexType>
  <xs:element type="tns:metadata" name="metadata"/>
  <xs:complexType name="metadata">
    <xs:sequence>
      <xs:element type="tns:jdbcConnectivity" name="jdbcConnectivity" minOccurs="0"/>
      <xs:element type="tns:databaseInfo" name="databaseInfo" minOccurs="0"/>
      <xs:element name="tables" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element type="tns:table" name="table" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="generatedValue">
    <xs:sequence/>
    <xs:attribute type="xs:string" name="generator">
      <xs:annotation>
        <xs:documentation>The name of the primary key generator to use</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="tns:generationType" name="strategy">
      <xs:annotation>
        <xs:documentation>The primary key generation strategy that the persistence provider must use to generate the annotated entity primary key.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="entityConfig">
    <xs:annotation>
      <xs:documentation>Describes an entity config</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="usages" minOccurs="0">
        <xs:annotation>
          <xs:documentation>For future use</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="xs:string" name="usage" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="metaAttributes" minOccurs="0">
        <xs:annotation>
          <xs:documentation>For future use</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="tns:metaAttribute" name="metaAttribute" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element type="tns:inheritance" name="inheritance" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Inheritance configuration.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element type="tns:extendsClass" name="extendsClass" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Specify the base class that this entity should extends. Only for root entity.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="implementsInterfaces" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Specify the extra interfaces that this entity should implement.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="tns:implementsInterface" name="implementsInterface" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="columnConfigs" minOccurs="0">
        <xs:annotation>
          <xs:documentation>This entity's columnConfigs. Note that for entities without inheritance or for entities with a JOIN inheritance strategy, if a column is present in the  table's meta data but has no corresponding entityConfig in this list, then an entityConfig is created by default and added automatically to this list.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="tns:columnConfig" name="columnConfig" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute type="xs:string" name="entityName">
      <xs:annotation>
        <xs:documentation><![CDATA[The JPA entity's type. <br>  For example, entityName="BankAccount". <br>  By default, the entity name is deduced from the table name. <br>  For example: 'bank_account' will become 'BankAccount';]]></xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="sequenceName">
      <xs:annotation>
        <xs:documentation>Allows you to specify the sequence name to use in order to generate this entity pk value.  When a sequence name is provided the corresponding @SequenceGenerator and @GeneratedValue annotations are   added to the primary key attribute.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="tableName">
      <xs:annotation>
        <xs:documentation>The underlying table name for the entity. If not set, inheritance must be configured.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:boolean" name="middleTable">
      <xs:annotation>
        <xs:documentation>By convention a table is considered as a many-to-many middle table if it has two foreign keys and no other regular columns. This attribute allows you to  consider this table as a middle table, even if it has other regular columns. A regular column is a column that is not used as a primary key or as an  optimistic lock.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="comment">
      <xs:annotation>
        <xs:documentation>The comment that will be inserted in this entity's JavaDoc.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="rootPackage">
      <xs:annotation>
        <xs:documentation><![CDATA[Allows you to override the default root package.<br>  Example: com.yourcompany]]></xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="subPackage">
      <xs:annotation>
        <xs:documentation><![CDATA[When you define a sub-package, the resulting entity's package becomes "<rootPackage>.domain.<subPackage>" instead of "<rootPackage>.domain". There is no  sub-package by default.]]></xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="tns:associationDirection" name="associationDirection">
      <xs:annotation>
        <xs:documentation>It is pertinent only if this entity's table plays the role of a middle table in a many-to-many association. In that case you can use this parameter to  set the many-to-many association direction.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="tns:collectionType" name="collectionType">
      <xs:annotation>
        <xs:documentation>You can override the default collection type for this entity</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="label">
      <xs:annotation>
        <xs:documentation>The label for this entity. It is copied in the entity properties file located in the folder 'src/main/resources/localization/domain-generated'.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="pattern">
    <xs:annotation>
      <xs:documentation>A pattern is a structure to help handling inclusion and exclusion of resources</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
    <xs:attribute type="xs:string" use="required" name="pattern">
      <xs:annotation>
        <xs:documentation><![CDATA[if the pattern contains '?', '*', '**' the matching will be done using an ant matcher, otherwise it will do a equalsIgnoreCase  <ul>  <li>? matches one character</li>  <li>* matches zero or more characters</li>  <li>** matches zero or more 'directories' in a path</li>  </ul>  Some examples:  <ul>  <li>com/t?st.jsp - matches com/test.jsp but also com/tast.jsp or com/txst.jsp</li>  <li>com/yourcompany/**\/*.jsp - matches all .jsp files in the com/yourcompany directory</li>  </ul>]]></xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:boolean" use="required" name="include">
      <xs:annotation>
        <xs:documentation>True is is an inclusion pattern, false for an exclusion ?</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="manyToManyConfig">
    <xs:annotation>
      <xs:documentation>The ManyToManyConfig allows you to fine tune your @ManyToMany association.  The ManyToManyConfig element must be a child of a columnConfig element  referencing (i.e foreignkey) the entity that is the target of this @ManyToMany association.  The columnConfig necessarily belongs to a 'join entity'.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="cascades" minOccurs="0">
        <xs:annotation>
          <xs:documentation>The list of JPA cascade types for the this ManyToMany association.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="tns:cascade" name="cascade" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute type="xs:string" name="var">
      <xs:annotation>
        <xs:documentation>The variable name for the collection. It should be plural, for example: 'children'.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="elementVar">
      <xs:annotation>
        <xs:documentation>The variable name for an element of the collection. For example, if the variable name for the collection is 'children', the elementVar should be child.  This elementVar will be used to generate convenient methods for the collection, such as an adder method addChild(YourType child).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="tns:fetchType" name="fetch">
      <xs:annotation>
        <xs:documentation>The JPA fetch type for this ManyToMany association.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="configuration">
    <xs:sequence>
      <xs:element type="tns:jdbcConnectivity" name="jdbcConnectivity" minOccurs="0">
        <xs:annotation>
          <xs:documentation>The JDBC settings enabling Celerio to retrieve your database meta data.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element type="tns:databaseInfo" name="databaseInfo" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Specify the database information, used for documentation only</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="packs" minOccurs="0">
        <xs:annotation>
          <xs:documentation>List of template packs to execute during the generation. Defaults to the template packs found in the classpath.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="tns:pack" name="pack" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="modules" minOccurs="0">
        <xs:annotation>
          <xs:documentation>List of modules enabled during the generation. Modules are cross cutting functionalities that span across packs.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="tns:module" name="module" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="customModules" minOccurs="0">
        <xs:annotation>
          <xs:documentation>List of custom modules enabled during the generation. Modules are cross cutting functionalities that span across packs.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="xs:string" name="customModule" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="filenames" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Control the generation output by filtering the generated files based on their filename.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="tns:pattern" name="filename" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="templates" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Control the generation output by filtering the execution of the generation templates based on their filename.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="tns:pattern" name="template" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="tables" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Filter the tables you want to be generated</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="tns:pattern" name="table" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="numberMappings" minOccurs="0">
        <xs:annotation>
          <xs:documentation>The list of number mappings. The first match is used. If no match is found, convention applies.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="tns:numberMapping" name="numberMapping" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="dateMappings" minOccurs="0">
        <xs:annotation>
          <xs:documentation>The list of date mappings. The first match is used. If no match is found, convention applies.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="tns:dateMapping" name="dateMapping" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element type="tns:conventions" name="conventions" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Configure the java convention such as classnames, packages, methods</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="metaAttributes" minOccurs="0">
        <xs:annotation>
          <xs:documentation>For future use</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="tns:metaAttribute" name="metaAttribute" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element type="tns:generation" name="generation" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Miscellaneous generation configuration</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element type="tns:headerComment" name="headerComment" minOccurs="0">
        <xs:annotation>
          <xs:documentation>The JDBC settings enabling Celerio to retrieve your database meta data.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element type="tns:restriction" name="restriction" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Restrict the generation to the given elements</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute type="tns:associationDirection" name="associationDirection">
      <xs:annotation>
        <xs:documentation>Choose the default association direction</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="applicationName">
      <xs:annotation>
        <xs:documentation><![CDATA[Specify the default application name that is used in the generated pom.xml. It should be one word, no space.<br>  Example: casino]]></xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="rootPackage">
      <xs:annotation>
        <xs:documentation><![CDATA[Specify the default root package for all the generated java code<br>  Example: com.mycompany]]></xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="wellKnownFolderOverride">
    <xs:annotation>
      <xs:documentation>change the convention for a given well known folder</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
    <xs:attribute type="tns:wellKnownFolder" use="required" name="wellKnownFolder">
      <xs:annotation>
        <xs:documentation>WellKnownFolder to override</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="folder">
      <xs:annotation>
        <xs:documentation>Override the folder for this WellKnownFolder</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="generatedFolder">
      <xs:annotation>
        <xs:documentation>Override the generated folder for this WellKnownFolder</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="implementsInterface">
    <xs:sequence/>
    <xs:attribute type="xs:string" use="required" name="fullType">
      <xs:annotation>
        <xs:documentation>The full interface name that this entity implements. For example 'com.mycompany.MyInterface'</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="include">
    <xs:annotation>
      <xs:documentation>Include a configuration file dedicated to entityConfigs. Use it on large project to split your entityConfigs configuration into smaller pieces.</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
    <xs:attribute type="xs:string" use="required" name="filename">
      <xs:annotation>
        <xs:documentation>The path to a configuration file whose entityConfigs tag will be loaded.   The path must be relative to the folder containing the main configuration file.  Beware, only the entityConfigs tag will be loaded from this file.  For example: includes/ref/country.xml</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="oneToManyConfig">
    <xs:sequence>
      <xs:element name="cascades" minOccurs="0">
        <xs:annotation>
          <xs:documentation>The list of JPA cascade types for the this OneToMany association.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="tns:cascade" name="cascade" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute type="xs:string" name="var">
      <xs:annotation>
        <xs:documentation>The variable name for the collection. It should be plural, for example: 'children'.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="elementVar">
      <xs:annotation>
        <xs:documentation>The variable name for an element of the collection. For example, if the variable name for the collection is 'children', the elementVar should be child.  This elementVar will be used to generate convenient methods for the collection, such as an adder method addChild(YourType child).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="tns:fetchType" name="fetch">
      <xs:annotation>
        <xs:documentation>The JPA fetch type for this OneToMany association.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="column">
    <xs:annotation>
      <xs:documentation>Configuration of a column, the data reflect the jdbc metadata</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="enumValues" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Enum values if the column represents an enum</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="xs:string" name="enumValue" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute type="xs:string" use="required" name="name">
      <xs:annotation>
        <xs:documentation>Column name</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="columnDef">
      <xs:annotation>
        <xs:documentation>Default value</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:int" use="required" name="decimalDigits">
      <xs:annotation>
        <xs:documentation>The number of fractional digits</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:boolean" use="required" name="nullable">
      <xs:annotation>
        <xs:documentation>Is NULL allowed ?</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:int" use="required" name="ordinalPosition">
      <xs:annotation>
        <xs:documentation>Index of column in table (starting at 1)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="remarks">
      <xs:annotation>
        <xs:documentation>Comment describing the column</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:int" use="required" name="size">
      <xs:annotation>
        <xs:documentation>Column size. For char or date types this is the maximum number of characters, for numeric or decimal types this is precision.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="tns:jdbcType" name="type">
      <xs:annotation>
        <xs:documentation>This column jdbc type</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="columnConfig">
    <xs:sequence>
      <xs:element name="usages" minOccurs="0">
        <xs:annotation>
          <xs:documentation>For future uses</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="xs:string" name="usage" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element type="tns:enumConfig" name="enumConfig" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Specify the enum config to map this column to a Java enum.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element type="tns:generatedValue" name="generatedValue" minOccurs="0">
        <xs:annotation>
          <xs:documentation>When the column represents a single primary key, you can configure the GeneratedValue JPA annotation here.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element type="tns:genericGenerator" name="genericGenerator" minOccurs="0">
        <xs:annotation>
          <xs:documentation>When the column represents a single primary key, you can configure the GenericGenerator JPA annotation here.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="metaAttributes" minOccurs="0">
        <xs:annotation>
          <xs:documentation>for future use</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="tns:metaAttribute" name="metaAttribute" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="customAnnotations" minOccurs="0">
        <xs:annotation>
          <xs:documentation>List of custom annotations to apply on this property.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="tns:customAnnotation" name="customAnnotation" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element type="tns:manyToOneConfig" name="manyToOneConfig" minOccurs="0"/>
      <xs:element type="tns:oneToManyConfig" name="oneToManyConfig" minOccurs="0"/>
      <xs:element type="tns:oneToOneConfig" name="oneToOneConfig" minOccurs="0"/>
      <xs:element type="tns:oneToOneConfig" name="inverseOneToOneConfig" minOccurs="0"/>
      <xs:element type="tns:manyToManyConfig" name="manyToManyConfig" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute type="xs:string" name="sharedEnumName">
      <xs:annotation>
        <xs:documentation>reference a shared enum name by its name. You cannot have both an enum configuration, and a shared enum name.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:boolean" name="ignore">
      <xs:annotation>
        <xs:documentation>If set to true, the column will be ignored. Make sure you do not ignore not null columns.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="tns:jdbcType" name="type">
      <xs:annotation>
        <xs:documentation>Override the default JdbcType.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="tns:mappedType" name="mappedType">
      <xs:annotation>
        <xs:documentation>Force the Java mapped type for this column instead of relying on Celerio's conventions.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="fieldName">
      <xs:annotation>
        <xs:documentation><![CDATA[The field name, that is the name of the variable. By default, the field name is deduced from the column name.<br>  Example: 'first_name' will become 'firstName';]]></xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="tableName">
      <xs:annotation>
        <xs:documentation>Allows you to use JPA secondary table if you set a table name that is different from the entity table name. Default to the entity table name.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="columnName">
      <xs:annotation>
        <xs:documentation>The mandatory column name.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:int" name="size">
      <xs:annotation>
        <xs:documentation>Override the size defined in the metadata</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:int" name="min">
      <xs:annotation>
        <xs:documentation>Minimum length for String</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:int" name="ordinalPosition">
      <xs:annotation>
        <xs:documentation>Override the ordinal position defined in the metadata</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="typeConverter">
      <xs:annotation>
        <xs:documentation>Specify a type converter for persisting specific columns</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:boolean" name="businessKey">
      <xs:annotation>
        <xs:documentation>Indicates if this property is part of the entity business key. You may set it on several properties at the same time if your business key involves more  than one column. If set to true, the property will be used in equals/hashCode methods. As soon as you declare this attribute on a property, convention no  longer applies for the entity.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:boolean" name="asTransient">
      <xs:annotation>
        <xs:documentation><![CDATA[Allows you to override the getter in a sub-class that extends the base entity. <br>  If set to true, all the annotations for the corresponding getter will be commented and a @Transient annotation will be set.]]></xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="comment">
      <xs:annotation>
        <xs:documentation>The comment that will be inserted as JavaDoc for this column.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:int" name="decimalDigits">
      <xs:annotation>
        <xs:documentation>Override the decimal digits defined in the metadata</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="defaultValue">
      <xs:annotation>
        <xs:documentation>Override the default value defined in the metadata</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:boolean" name="messageKey">
      <xs:annotation>
        <xs:documentation>Indicates whether the possible values held by this column are used as keys to resolve the associated localized values.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="label">
      <xs:annotation>
        <xs:documentation>The label for this column. It is copied in the entity properties file located in the folder 'src/main/resources/localization/domain-generated'.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:boolean" name="inverse">
      <xs:annotation>
        <xs:documentation>If this column represents a foreign key that point to the target of an ManyToMany association it can be set to true to change the  default inverse side of the ManyToMany association. By convention, the column with the highest ordinal position refers to the inverse side.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="tns:associationDirection" name="associationDirection">
      <xs:annotation>
        <xs:documentation>If this column represents an importedKey, should it be bidirectionnal or unidirectionnal</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:boolean" name="enableOneToVirtualOne">
      <xs:annotation>
        <xs:documentation>If this column represents an importedKey, and the column is unique, should the one to one be handled via a collection ?</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:boolean" name="nullable">
      <xs:annotation>
        <xs:documentation>Override the nullable definition defined in the metadata</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:boolean" name="formField">
      <xs:annotation>
        <xs:documentation>Should this column be in the form to be filled by your users</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:boolean" name="searchField">
      <xs:annotation>
        <xs:documentation>Should this column be in the search form to be filled by your users</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:boolean" name="searchResult">
      <xs:annotation>
        <xs:documentation>Should this column be present in the search results</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:boolean" name="selectLabel">
      <xs:annotation>
        <xs:documentation>Should this column be part of the label representation</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:boolean" name="unique">
      <xs:annotation>
        <xs:documentation>Override the uniqueness defined in the indexes from the metadata</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:boolean" name="visible">
      <xs:annotation>
        <xs:documentation>Should this column be visible to the users ?</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:boolean" name="version">
      <xs:annotation>
        <xs:documentation>Should this column be used as a version ? This column will be mapped with a @Version</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="targetTableName">
      <xs:annotation>
        <xs:documentation>Make this column a 'virtual' foreign key, referencing the specified table name. You should not use it if your database schema already declare such  constraint.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="targetColumnName">
      <xs:annotation>
        <xs:documentation>Once you have set the targetTableName, you can adjust the targetColumnName if it is different from the primaryKey column. Defaults to the  targetTableName's primary key column.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="targetEntityName">
      <xs:annotation>
        <xs:documentation>If this entity field maps a foreign key column that refers to a table mapped to different entities (i.e. inheritance), you must set the name of the  entity this field refers to.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="targetEntityVar">
      <xs:annotation>
        <xs:documentation>The variable name used to refer to the target entity.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="sourceEntityVar">
      <xs:annotation>
        <xs:documentation>DEPRECATED. Please use instead oneToManyConfig child element.  The variable name used on the target entity to refer back to this entity. It should be singular.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="m2mVar">
      <xs:annotation>
        <xs:documentation><![CDATA[DEPRECATED. Please use the manyToManyConfig child element.  The associated 'many-to-many' variable name used by the entity that hold a many-to-many relation with the entity that this column refer to. For example,  if your many-to-many relation involves authors and books, and this column refers to books, by setting m2mVar="publishedBook", you would get the method  List<Book> publishedBooks in the Author entity. Note that currently, you should provide a singular m2mVar, the plural is calculated automatically. This  will change in the future.]]></xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:boolean" name="password">
      <xs:annotation>
        <xs:documentation>Should this column be considered as storing a password ? This will impact input types attribute on the web tier.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="numberMapping">
    <xs:annotation>
      <xs:documentation>Global rule to map columns whose JDBC TYPE correspond to a number to a Java type.</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
    <xs:attribute type="tns:mappedType" name="mappedType">
      <xs:annotation>
        <xs:documentation>The mapped type to use when both the column size and decimal digit value  fall into the specified ranges.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:int" name="columnSizeMin">
      <xs:annotation>
        <xs:documentation>The minimum (inclusive) column size to fall into this mapping range.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:int" name="columnSizeMax">
      <xs:annotation>
        <xs:documentation>The maximum (exclusive) column size to fall into this mapping range.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:int" name="columnDecimalDigitsMin">
      <xs:annotation>
        <xs:documentation>The minimum (inclusive) column decimal digit value to fall into this  mapping range.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:int" name="columnDecimalDigitsMax">
      <xs:annotation>
        <xs:documentation>The maximum (exclusive) column decimal digit value to fall into this  mapping range.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:element type="tns:celerio" name="celerio"/>
  <xs:complexType name="enumValue">
    <xs:sequence>
      <xs:element name="comments" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Set comments for this enum value.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element type="xs:string" name="comment" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute type="xs:string" use="required" name="value">
      <xs:annotation>
        <xs:documentation><![CDATA[Value <br>  Example: MS]]></xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="name">
      <xs:annotation>
        <xs:documentation><![CDATA[Name of the enum value, by default is is the one defined in value<br>  Example: Miss]]></xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="label">
      <xs:annotation>
        <xs:documentation><![CDATA[Label to be used when representing this enum value <br>  Example: gender.male]]></xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="generatedPackageOverride">
    <xs:annotation>
      <xs:documentation>Override the convention for a given GeneratedPackage</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
    <xs:attribute type="tns:generatedPackage" use="required" name="generatedPackage">
      <xs:annotation>
        <xs:documentation>The GeneratedPackage to override</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="rootPackage">
      <xs:annotation>
        <xs:documentation><![CDATA[Override the root package<br>  Example: com.yourcompany]]></xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" name="subPackage">
      <xs:annotation>
        <xs:documentation><![CDATA[Override the sub package, if rootPackage is also specified they will be merged.<br>  Example: my.subpackage]]></xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="metaAttribute">
    <xs:annotation>
      <xs:documentation>Meta attributes are free form key value pairs</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
    <xs:attribute type="xs:string" use="required" name="name">
      <xs:annotation>
        <xs:documentation>name of you meta attribute</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" use="required" name="value">
      <xs:annotation>
        <xs:documentation>value for this attribute</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
</xs:schema>